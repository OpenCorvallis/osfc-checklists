# Copyright 2024 Oregon State Flying Club
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This workflow renders the checklist from the PR and uploads them as an
# artifact. The post_comment workflow will then download that artifact and post
# them in a comment on the pull request.

name: Render Checklists
on:
  pull_request:
permissions: {}

jobs:
  render_checklist:
    runs-on: ubuntu-latest
    steps:
      - name: Restore Cached Typst
        id: restore-typst
        uses: actions/cache/restore@v4
        with:
          # Note: `key` will never be an exact match, instead `restore-keys`
          # will match a prefix of the cache.
          key: typst-
          path: ~/.cargo/bin/typst
          restore-keys: typst-

      # If there was a cache miss, build Typst. Also, create the cache_miss file
      # to tell the Post Comment workflow to re-enable the Cache Typst workflow.
      - name: Build Typst
        id: build-typst
        # We can't use cache-hit to detect a cache hit, because cache/restore
        # indicates a miss if only restore-keys matches. Instead, look to see if
        # it output a matched key.
        if: steps.restore-typst.outputs.cache-matched-key == ''
        run: |
          cargo install typst-cli
          mkdir rendered_pr
          touch rendered_pr/cache_miss

      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: osfc-checklists

      # This renders the checklist, and also stashes the git ref and PR number
      # in the artifact so the Post Comment workflows can retrieve them.
      - name: Render Checklists
        run: |
          mkdir -p rendered_pr/build
          echo ${{ github.event.number }} > rendered_pr/pr_number
          cd osfc-checklists
          git rev-parse HEAD > ../rendered_pr/git_ref
          echo PR ${{ github.event.number }} > signature.typ
          make -j4 normal svgs
          cp *.pdf ../rendered_pr/build/
          cp svgs/*.svg ../rendered_pr/build/

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rendered_pr
          path: rendered_pr/
